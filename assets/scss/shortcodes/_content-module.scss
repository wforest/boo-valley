/* FILE: shortcodes/_content-module.scss */

//
// Content Module
//





.wm-content-module {
	text-align: center;

	.inline &,
	&.inline {
		text-align: inherit;
	}



	// Item

		&-item {
			padding: $golden / 2 +rem;

			.item-border & {
				padding: $golden +rem;
				border-width: 1px;
				border-style: solid;
				transition: box-shadow ( $large_animation_speed +s );
				transition-timing-function: cubic-bezier( 0.165, 0.975, 0.530, 1.650 );

				@include responsive( map_get( $breakpoint, 'm' ) ) {
					padding: power( $golden, 2 ) +rem;
				}

				@include responsive( map_get( $breakpoint, 'xl' ) ) {
					padding: power( 1 + $golden_minor, 4 ) +rem;
				}

				&:not(.wm-iconbox-module) {

					.image {

						img {
							width: calc( 100% + #{ $golden * 2rem } );
							max-width: none;
							margin: $golden * -1rem;
							margin-bottom: 0;

							@include responsive( map_get( $breakpoint, 'm' ) ) {
								width: calc( 100% + #{ power( $golden, 2 ) * 2rem } );
								margin: power( $golden, 2 ) * -1rem;
								margin-bottom: 0;
							}

							@include responsive( map_get( $breakpoint, 'xl' ) ) {
								width: calc( 100% + #{ power( 1 + $golden_minor, 4 ) * 2rem } );
								margin: power( 1 + $golden_minor, 4 ) * -1rem;
								margin-bottom: 0;
							}

						}

					}

				}

			}

		}



	// Image & Icon

		.image {
			margin-bottom: 1rem;
			line-height: 1;
			font-size: power( 1 + $golden_minor, 4 ) +em;

			@include responsive( map_get( $breakpoint, 'xl' ) ) {
				margin-bottom: $golden +rem;
			}

			@include responsive( map_get( $breakpoint, 'xl' ) ) {
				font-size: power( 1 + $golden_minor, 5 ) +em;
			}

		}



	// Title

		.title {
			margin-bottom: $golden_minor + 1rem;

			.hide-title & {
				display: none; // Simply use a heading in Content Module content
			}

			h2,
			h3,
			h4 {
				@extend %sc_font_logo;
				font-size: nth( map_get( $h_tags_setup, 'h3, .h3' ), 1 ) +em;
				font-weight: 700;
				font-style: italic;
				line-height: 1 + $golden_minor;
			}

			a {
				text-decoration: none;
			}

		}

		&-element .entry-subtitle {
			margin-top: $golden_minor +em;
			font-size: 1em - $golden_minor * 3 / 4;
		}



	// More link

		.more-link {
			margin-top: $golden +em;

			.hide-more-button & {
				display: none; // Inaccessibly - the title and icon/image is still linkable.
			}

			$button_font_size: 1 - $golden_minor / 2; // In em
			$button_font_size_compensation: 1 / $button_font_size;

			a {
				display: inline-block;
				padding: ( ( $golden_major * 1em ) * $button_font_size_compensation ) ( ( $golden_minor + 1em ) * $button_font_size_compensation );
				text-transform: uppercase;
				font-size: $button_font_size +rem;
				font-weight: 700;
				letter-spacing: $golden_minor / 6 +em;
				border-width: 2px;
				border-style: solid;
				border-color: currentColor;
				border-radius: 5em;
				transition: text-shadow ( $large_animation_speed +s ),
				            background ( $large_animation_speed +s ),
				            color ( $large_animation_speed +s ),
				            border-color ( $small_animation_speed +s ),
				            box-shadow ( $small_animation_speed +s ),
				            opacity ( $small_animation_speed +s );

				&:hover,
				&:focus,
				&:active {
					text-decoration: none;
					box-shadow: 0 5px 10px -2px rgba( #000, .26 );
				}

				&:active {
					outline: 0;
					opacity: .9;
					box-shadow: inset 0 1px 3px rgba( #000, .13 );
				}

			}

		}

}



// Iconbox

	.wm-iconbox-module {

		// Inline (horizontal) layout

			.inline & {

				.image {
					display: inline-block;
					margin-#{$right}: $golden_minor + 1rem;
					margin-bottom: $golden +rem;
					font-size: power( $golden, 2 ) +em;
					vertical-align: top;

					@include responsive( map_get( $breakpoint, 'm' ) ) {
						margin-#{$left}: ( $golden_minor + 1rem ) * -1;
					}

					@include responsive( map_get( $breakpoint, 'l' ) ) {
						font-size: power( 1 + $golden_minor, 4 ) +em;
					}

				}

				.title {
					display: inline-block;
					max-width: calc( 100% - #{ power( $golden, 2 ) +em } - #{ $golden_minor + 1rem } );
					margin-bottom: $golden +rem;

					@include responsive( map_get( $breakpoint, 'm' ) ) {
						max-width: calc( 100% - #{ power( $golden, 2 ) +em } );
					}

					@include responsive( map_get( $breakpoint, 'l' ) ) {
						max-width: calc( 100% - #{ power( 1 + $golden_minor, 4 ) +em } );
					}

				}

			}

			.hide-title & {

				.title {
					display: none;
				}

			}

			.inline.hide-title & {

				.image {
					margin-#{$left}: 0;
				}

			}

	}
