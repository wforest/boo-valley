/* FILE: print/__base.scss */

//
// Basic print styles
//





// Print styles from HTML boilerplate v5.2.0 (adapted to our needs)
// @link  https://github.com/h5bp/html5-boilerplate/blob/5.2.0/dist/css/main.css#L205

	*,
	*:before,
	*:after,
	*:first-letter {
		background: transparent;
		color: #000; // Black prints faster: http://www.sanbeiji.com/archives/953
		box-shadow: none;
		text-shadow: none;
	}

	a,
	a:visited {
		text-decoration: underline;
	}

	a[href]:after {
		content: " (" attr(href) ")";
		overflow-wrap: break-word;
		word-wrap: break-word;
	}

	abbr[title]:after {
		content: " (" attr(title) ")";
	}

	//
	// Don't show links that are fragment identifiers,
	// or use the `javascript:` pseudo protocol
	//

	a[href^="#"]:after,
	a[href^="javascript:"]:after {
		content: "";
	}

	pre,
	blockquote {
		border: 1px solid #999;
		page-break-inside: avoid;
	}

	//
	// Printing Tables:
	// http://css-discuss.incutio.com/wiki/Printing_Tables
	//

	thead {
		display: table-header-group;
	}

	tr,
	img {
		page-break-inside: avoid;
	}

	img {
		max-width: 100% !important;
	}

	p,
	h2,
	h3 {
		orphans: 3;
		widows: 3;
	}

	h2,
	h3 {
		page-break-after: avoid;
	}



// Elements

	body {
		@extend %font_serif;
		font-size: 11pt;
	}

	h1 {
		font-size: $golden +em;

		a {
			@extend %no_link_after;
		}

	}

	h2 {
		font-size: $golden_minor + 1em;

		a {
			@extend %no_link_after;
		}

	}

	h3 {
		font-size: $golden_minor / 2 + 1em;

		a {
			@extend %no_link_after;
		}

	}

	h4, h5, h6 {
		font-size: 1em;

		a {
			@extend %no_link_after;
		}

	}

	figure {
		padding: 0;
		margin: 0;
	}

	img {
		height: auto;
	}

	blockquote {
		margin: 1em 0;
		padding: 0 1em;
		border: 0;
		border-#{$left}: 2pt solid; // {{RTL}}
	}

	pre {
		padding: 1em;
		border: 1pt dashed;
	}

	table {
		border: 1pt solid;
		border-collapse: collapse;
	}

	td,
	th {
		padding: ( $golden_minor / 2 +em ) ( $golden_major +em );
		border: 1pt solid;
	}

	dl {
		margin: ( $golden_minor +em ) 0 0;
	}

	dd {
		margin: 0 1em ( $golden_minor +em );

		p {
			margin: 0;
		}

	}
